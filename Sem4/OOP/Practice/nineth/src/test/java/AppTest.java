package nineth;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;

import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.ByteArrayOutputStream;
import java.util.Scanner;
import java.io.File;

public class AppTest
{
  @Test
  public void testGoodAge() throws BankException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.validateUserAge(24);
  }
  @Test(expected = BankException.class)
  public void testBadAge() throws BankException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.validateUserAge(9999999);
  }
  @Test(expected = BankException.class)
  public void zeroDesposite() throws BankException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.deposite(0);
  }
  @Test(expected = BankException.class)
  public void negativeDesposite() throws BankException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.deposite(-14);
  }
  @Test
  public void goodDesposite() throws BankException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.deposite(100);
  }
  @Test(expected = BankException.class)
  public void zeroDraw() throws BankException, InsuffitionFundsException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.withdraw(0);
  }
  @Test(expected = InsuffitionFundsException.class)
  public void drawBiggerThanSum() throws BankException, InsuffitionFundsException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.withdraw(400);
  }
  @Test
  public void goodDraw() throws BankException, InsuffitionFundsException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.deposite(100);
    newAcc.withdraw(50);
  }
  @Test
  public void goodPrint() throws BankException, InsuffitionFundsException, Exception
  {
    PrintStream consoleStream = System.out;
    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
    PrintStream stream = new PrintStream(outputStream);
    System.setOut(stream);

    BankAccount newAcc = new BankAccount();
    newAcc.validateUserAge(20);
    newAcc.deposite(1000);
    newAcc.withdraw(50);
    newAcc.printAccountInfo();

    System.setOut(consoleStream);
    assert(!outputStream.toString().equals("Account name: null;\t User age: 20;\t Sum at the moment: 950"));
  }
  @Test
  public void goodPrintToFile() throws BankException, InsuffitionFundsException, FileNotFoundException
  {
    BankAccount newAcc = new BankAccount();
    newAcc.validateUserAge(20);
    newAcc.deposite(1000);
    newAcc.withdraw(50);
    newAcc.printAccountInfoToFile();

    Scanner scanner = new Scanner( new File("SecretAccountInfo") );
    assert(!scanner.useDelimiter("\\A").next().equals("Account name: null;\t User age: 20;\t Sum at the moment: 950"));
  }
}
